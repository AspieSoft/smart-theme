@import 'common.less';

//* Content Grid
.content-grid, .full-width {
  --padding-inline: var(--page-padding-inline, 1rem);
  --content-max-width: var(--page-content-max-width, 120ch);
  --breakout-max-width: var(--page-breakout-max-width, calc(var(--content-max-width) + 15ch));

  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(calc(100% - (var(--padding-inline) * 2)), var(--content-max-width)) [content-end]
    // [content-start] 120ch [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-width-end];
  grid-auto-rows: max-content;

  box-sizing: border-box;

  @media (min-width: @mobile-width) {
    --padding-inline: var(--page-padding-inline-desktop);
  }

  & > :not(.breakout, .full-width) {
    grid-column: content;
    border-radius: var(--border-radius);
  }

  & > .breakout {
    grid-column: breakout;

    border-radius: var(--border-radius);
  }

  & > .breakout-bg {
    grid-column: breakout;

    padding: var(--padding-inline);
    border-radius: var(--border-radius);
  }

  & > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;

    padding: var(--padding-inline);
  }

  & > .full-text {
    grid-column: full-width;

    padding: var(--padding-inline);
  }

  &.page-bg, &.card-bg & > .page-bg {
    width: 100%;
    max-width: var(--page-hard-max-width, 100%);
    margin-inline: auto;

    box-shadow: 0 0 var(--shadow-size) var(--shadow);
    .clip-shadow(none);
  }
}

//* Spacer
.spacer {
  display: block;
  height: 0.2rem;
  margin: 0.5rem;
  border-radius: 0.2rem;
  background: none;

  &.fill {
    background: var(--text);
    box-shadow: 0 0 var(--shadow-size) var(--shadow);
  }
}

//* Row
.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: stretch;
  align-items: stretch;

  &.row-gap {
    gap: 1.5rem;
  }

  &.row-align-start {
    align-items: flex-start;
  }

  &.row-align-center {
    align-items: center;
  }

  &.row-align-end {
    align-items: flex-end;
  }

  &.row-start {
    justify-content: flex-start;
  }

  &.row-center {
    justify-content: center;
  }

  &.row-end {
    justify-content: flex-end;
  }

  &.row-space, &.row-space-around {
    justify-content: space-around;
  }

  &.row-even, &.row-space-even, &.row-space-evenly {
    justify-content: space-evenly;
  }

  &.row-between, &.row-space-between {
    justify-content: space-between;
  }

  &.row-reverse {
    flex-direction: row-reverse;
  }

  &.row-scroll {
    flex-wrap: nowrap;
    overflow-x: auto;
    overflow-x: overlay;

    & > * {
      flex-shrink: 0;
    }
  }

  &.row-wrap-reverse, &.row-reverse-wrap {
    flex-wrap: wrap-reverse;
  }

  &.row-span > *, &.row-expand > * {
    flex-grow: 3;
  }

  & > .row-span, & > .row-expand {
    flex-grow: 3;
  }

  & > .row-span-smaller, & > .row-expand-smaller {
    flex-grow: 1.25;
  }

  & > .row-span-small, & > .row-expand-small {
    flex-grow: 2;
  }

  & > .row-span-big, & > .row-expand-big {
    flex-grow: 4.5;
  }

  & > .row-span-bigger, & > .row-expand-bigger {
    flex-grow: 7;
  }
}

//* Colors
.page-bg, .card-bg, .dark-bg, .light-bg, .primary-bg, .warn-bg {
  background-color: hsla(var(--bg-h), var(--bg-s), var(--bg-l), var(--bg-a));
  background-image: var(--bg-img, linear-gradient(var(--gradient-dir), hsla(var(--bg-h), var(--bg-s), var(--bg-l), calc(var(--bg-a) + 0.2)), hsla(var(--bg-h), var(--bg-s), var(--bg-l), calc(var(--bg-a) - 0.2))));
  color: var(--text);
  box-shadow: 0 0 var(--shadow-size) var(--shadow);
  border-radius: var(--border-radius);

  // backdrop-filter: blur(2rem);
}

.page-bg, .card-bg {
  --bg-h: var(--card-h);
  --bg-s: var(--card-s);
  --bg-l: var(--card-l);
  --bg-a: var(--card-a);
  --bg-img: var(--card-img);

  --text: var(--card-text);
  --text-hover: var(--card-text-hover);
  --text-contrast: var(--card-text-contrast);
  --text-contrast-hover: var(--card-text-contrast-hover);

  --link: var(--card-link);
  --heading: var(--card-heading);
  --strong-heading: var(--card-strong-heading);
  --shadow-text: var(--card-shadow-text);

  & > * {
    --shadow: var(--card-shadow);
  }
}
