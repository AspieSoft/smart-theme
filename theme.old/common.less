//* global vars
@hide-outline: solid 0.15em transparent;

//* mobile
@mobile-width: 800px;
@desktop-width: 1400px;

.mobile(@sel, @desktop, @mobile) {
  @{sel}: @desktop;

  @media screen and (max-width: @mobile-width) {
    @{sel}: @mobile;
  }
}

.on-mobile(@sel, @mobile) {
  @media screen and (max-width: @mobile-width) {
    @{sel}: @mobile;
  }
}

.not-mobile(@sel, @desktop) {
  @media screen and (min-width: (@mobile-width + 1)) {
    @{sel}: @desktop;
  }
}

//* common
.shadow(@col, @inset: false) {
  box-shadow: var(--shadow) var(@col);

  & when(@inset = false) {
    box-shadow: var(--shadow) var(@col);
  }

  & when(@inset = true) {
    box-shadow: inset var(--shadow) var(@col);
  }

  & when(@inset = inset) {
    box-shadow: inset var(--shadow) var(@col);
  }

  & when(@inset = both) {
    box-shadow: inset var(--shadow) var(@col),
    var(--shadow) var(@col);
  }

  & when(not(@inset = false) and not(@inset = true) and not(@inset = inset) and not(@inset = both)) {
    box-shadow: inset var(--shadow) var(@inset),
    var(--shadow) var(@col);
  }
}

.text-shadow(@col) {
  text-shadow: var(--text-shadow) var(@col);
}

.clip-shadow(@dir: bottom){
  & when(@dir = top) {
    clip-path: polygon(0% -20%, 100% -20%, 100% 100%, 0% 100%);
  }

  & when(@dir = bottom) {
    clip-path: polygon(0% 0%, 100% 0%, 100% 120%, 0% 120%);
  }

  & when(@dir = left) {
    clip-path: polygon(-20% 0%, 100% 0%, 100% 100%, -20% 100%);
  }

  & when(@dir = right) {
    clip-path: polygon(0% 0%, 120% 0%, 120% 100%, 0% 100%);
  }

  & when(@dir = topleft) {
    clip-path: polygon(-20% -20%, 100% -20%, 100% 100%, -20% 100%);
  }

  & when(@dir = topright) {
    clip-path: polygon(0% -20%, 120% -20%, 120% 100%, 0% 100%);
  }

  & when(@dir = bottomleft) {
    clip-path: polygon(-20% 0%, 100% 0%, 100% 120%, -20% 120%);
  }

  & when(@dir = bottomright) {
    clip-path: polygon(0% 0%, 120% 0%, 120% 120%, 0% 120%);
  }

  & when(@dir = none) {
    clip-path: none;
  }
}

.font(@family, @size: 1em, @weight: normal) {
  font-family: var(@family);
  font-size: @size;
  font-weight: @weight;
}

.pos(@top, @bottom, @left, @right) {
  top: @top;
  bottom: @bottom;
  left: @left;
  right: @right;
}

//* rtl
.left(@sel, @value) {
  html:not([dir="rtl"]) & {
    @{sel}-left: @value;
  }

  html[dir="rtl"] & {
    @{sel}-right: @value;
  }
}

.right(@sel, @value) {
  html:not([dir="rtl"]) & {
    @{sel}-right: @value;
  }

  html[dir="rtl"] & {
    @{sel}-left: @value;
  }
}

.left-pos(@value) {
  html:not([dir="rtl"]) & {
    left: @value;
  }

  html[dir="rtl"] & {
    right: @value;
  }
}

.right-pos(@value) {
  html:not([dir="rtl"]) & {
    right: @value;
  }

  html[dir="rtl"] & {
    left: @value;
  }
}

.rtl-value(@sel, @value, @valueRTL) {
  html:not([dir="rtl"]) & {
    @{sel}: @value;
  }

  html[dir="rtl"] & {
    @{sel}: @valueRTL;
  }
}

.rtl-override(@sel, @value) {
  html:not([dir="rtl"]) &, html[dir="rtl"] & {
    @{sel}: @value;
  }
}
